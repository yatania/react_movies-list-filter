{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/SearchMovie/SearchMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","SearchMovie","React","memo","value","onChange","htmlFor","type","id","placeholder","propTypes","PropTypes","string","isRequired","func","App","state","query","handleQueryChange","event","setState","target","filteredMovies","filter","toLowerCase","includes","visibleMovies","this","moviesFromServer","Component","ReactDOM","render","document","getElementById"],"mappings":"ywEAIaA,G,YAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,oBCvBGK,EAAcC,IAAMC,MAC/B,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACE,yBAAKf,UAAU,OACb,yBAAKA,UAAU,SACb,2BAAOgB,QAAQ,eAAehB,UAAU,SAAxC,gBAIA,yBAAKA,UAAU,WACb,2BACEiB,KAAK,OACLC,GAAG,eACHlB,UAAU,QACVmB,YAAY,mBACZL,MAAOA,EACPC,SAAUA,UAQtBJ,EAAYS,UAAY,CACtBN,MAAOO,IAAUC,OAAOC,WACxBR,SAAUM,IAAUG,KAAKD,Y,WCtBdE,G,MAAb,4MACEC,MAAQ,CACNC,MAAO,IAFX,EAKEC,kBAAoB,SAACC,GACnB,EAAKC,SAAS,CAAEH,MAAOE,EAAME,OAAOjB,SANxC,EASEkB,eAAiB,SAAA1B,GAAM,OAAI,YAAIA,GAAQ2B,QACrC,SAAAzB,GAAK,OAAIA,EAAMZ,MAAMsC,cAAcC,SAAS,EAAKT,MAAMC,MAAMO,gBAC1D1B,EAAMX,YAAYqC,cAAcC,SAAS,EAAKT,MAAMC,MAAMO,mBAXjE,4CAcE,WACE,IAAME,EAAgBC,KAAKL,eAAeM,GAE1C,OACE,yBAAKtC,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAACW,EAAD,CACEG,MAAOuB,KAAKX,MAAMC,MAClBZ,SAAUsB,KAAKT,oBAEjB,kBAAC,EAAD,CAAYtB,OAAQ8B,KAEtB,yBAAKpC,UAAU,WAAf,0BA1BR,GAAyBuC,cCDzBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.fb8baea8.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const SearchMovie = React.memo(\n  ({ value, onChange }) => (\n    <div className=\"box\">\n      <div className=\"field\">\n        <label htmlFor=\"search-query\" className=\"label\">\n          Search movie\n        </label>\n\n        <div className=\"control\">\n          <input\n            type=\"text\"\n            id=\"search-query\"\n            className=\"input\"\n            placeholder=\"Type search word\"\n            value={value}\n            onChange={onChange}\n          />\n        </div>\n      </div>\n    </div>\n  ),\n);\n\nSearchMovie.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { SearchMovie } from './components/SearchMovie';\nimport moviesFromServer from './api/movies.json';\nimport './App.scss';\n\nexport class App extends Component {\n  state = {\n    query: '',\n  };\n\n  handleQueryChange = (event) => {\n    this.setState({ query: event.target.value });\n  }\n\n  filteredMovies = movies => [...movies].filter(\n    movie => movie.title.toLowerCase().includes(this.state.query.toLowerCase())\n    || movie.description.toLowerCase().includes(this.state.query.toLowerCase()),\n  );\n\n  render() {\n    const visibleMovies = this.filteredMovies(moviesFromServer);\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <SearchMovie\n            value={this.state.query}\n            onChange={this.handleQueryChange}\n          />\n          <MoviesList movies={visibleMovies} />\n        </div>\n        <div className=\"sidebar\">\n          Sidebar goes here\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}